{"ast":null,"code":"import _regeneratorRuntime from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\src\\\\components\\\\dashboard\\\\MainContent\\\\Modal\\\\Modal.js\";\n\n/* import FileBase64 from 'react-file-base64'; */\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { createProject, updateProject, deleteProject } from \"../../../../actions/projectsActions\";\nimport { createTask, deleteTask, updateTask } from \"../../../../actions/taskActions\";\nimport moment from \"moment\";\nimport \"./Modal.scss\";\n\nvar Modal =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Modal, _Component);\n\n  function Modal() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      projectName: \"\",\n      members: [{\n        name: \"\",\n        email: \"\",\n        image: \"\"\n      }],\n      taskName: \"\",\n      assignee: \"\",\n      monthDue: \"\",\n      dayDue: \"\",\n      taskId: \"\",\n      images: []\n    };\n\n    _this.fileSelectedHandler = function (event) {\n      console.log(event.target.files.length); // try to find a storage to save this inputs\n\n      for (var i = 0; i < event.target.files.length; i++) {\n        console.log(event.target.files[i]);\n      }\n    };\n\n    _this.onChange = function (e) {\n      if ([\"name\", \"email\", \"image\"].includes(e.target.name)) {\n        var members = _toConsumableArray(_this.state.members);\n\n        console.log(\"e.target: \", e.target);\n        members[e.target.dataset.id][e.target.name] = e.target.value;\n\n        _this.setState({\n          members: members\n        });\n      } else {\n        _this.setState(_defineProperty({}, e.target.id, e.target.value));\n      }\n      /*     if ([\"name\", \"email\"].includes(e.target.name)) {\r\n            let members = [...this.state.members];\r\n            members[e.target.dataset.id][e.target.name] = e.target.value;\r\n            this.setState({ members });\r\n          } else {\r\n            this.setState({ [e.target.id]: e.target.value });\r\n          } */\n\n    };\n\n    _this.addMember = function (e) {\n      _this.setState(function (prevState) {\n        return {\n          members: [].concat(_toConsumableArray(prevState.members), [{\n            name: \"\",\n            email: \"\",\n            image: \"\"\n          }])\n        };\n      });\n    };\n\n    _this.deleteMember = function (index) {\n      var array = _toConsumableArray(_this.state.members);\n\n      array.splice(index, 1);\n\n      _this.setState({\n        members: array\n      });\n    };\n\n    _this.createProject = function () {\n      var project = {\n        projectName: _this.state.projectName,\n        members: _this.state.members\n      };\n      console.log(project);\n\n      _this.props.createProject(project);\n\n      _this.onClose();\n    };\n\n    _this.updateProject =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var project;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                project = {\n                  id: _this.props.id,\n                  projectName: _this.state.projectName,\n                  members: _this.state.members\n                };\n                _context.next = 3;\n                return _this.props.updateProject(project);\n\n              case 3:\n                _this.onClose();\n\n                window.location.reload();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteProject = function (id) {\n      _this.props.deleteProject(id, _this.props.history);\n\n      _this.onClose();\n    };\n\n    _this.deleteTask = function (id) {\n      _this.props.deleteTask(id);\n\n      _this.onClose();\n    };\n\n    _this.onClose = function (e) {\n      _this.props.onClose && _this.props.onClose(e);\n\n      _this.setState({\n        projectName: \"\",\n        taskName: \"\",\n        assignee: \"\",\n        monthDue: \"\",\n        dayDue: \"\",\n        members: [{\n          name: \"\",\n          email: \"\",\n          image: \"\"\n        }]\n      });\n    };\n\n    _this.onSelectChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.id, e.target.value));\n    };\n\n    _this.createTask = function (e) {\n      e.preventDefault();\n      var fullDate = _this.state.monthDue + \"-\" + _this.state.dayDue + \"-\" + Date().split(\" \")[3];\n\n      var momentDate = moment(fullDate, \"MM-DD-YYYY\")._d.toString().split(\" \");\n\n      var finalDate = momentDate[1] + \" \" + momentDate[2];\n      var data = {\n        project: _this.props.projects.project._id,\n        taskName: _this.state.taskName,\n        assignee: _this.state.assignee,\n        dateDue: finalDate\n      };\n\n      _this.props.createTask(data);\n\n      _this.onClose();\n    };\n\n    _this.updateTask = function (id) {\n      var finalDate;\n      var dates = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n      if (!_this.state.monthDue && !_this.state.dayDue) {\n        finalDate = _this.props.dateDue;\n      } else if (_this.props.dateDue && _this.props.dateDue !== \"Date undefined\" && !_this.state.monthDue && _this.state.dayDue) {\n        var fullDate = dates.indexOf(_this.props.dateDue.split(\" \")[0]) + 1 + \"-\" + _this.state.dayDue + \"-\" + Date().split(\" \")[3];\n\n        var momentDate = moment(fullDate, \"MM-DD-YYYY\")._d.toString().split(\" \");\n\n        finalDate = momentDate[1] + \" \" + momentDate[2];\n      } else if (_this.props.dateDue && _this.props.dateDue !== \"Date undefined\" && !_this.state.dayDue && _this.state.monthDue) {\n        var _fullDate = _this.state.monthDue + \"-\" + _this.props.dateDue.split(\" \")[1] + \"-\" + Date().split(\" \")[3];\n\n        var _momentDate = moment(_fullDate, \"MM-DD-YYYY\")._d.toString().split(\" \");\n\n        finalDate = _momentDate[1] + \" \" + _momentDate[2];\n      } else {\n        var _fullDate2 = _this.state.monthDue + \"-\" + _this.state.dayDue + \"-\" + Date().split(\" \")[3];\n\n        var _momentDate2 = moment(_fullDate2, \"MM-DD-YYYY\")._d.toString().split(\" \");\n\n        finalDate = _momentDate2[1] + \" \" + _momentDate2[2];\n      }\n\n      var task = {\n        id: id,\n        taskName: _this.state.taskName,\n        dateDue: finalDate,\n        assignee: _this.state.assignee || _this.props.assignee\n      };\n\n      _this.props.updateTask(task);\n\n      _this.onClose();\n    };\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"getFiles\",\n    value: function getFiles(files) {\n      /* console.log(\"files: -> \", files.base64); */\n      // base64 encoded here\n\n      /* console.log(\"files: -> \", files.base64); */\n\n      /* let a = this.state.members.slice();\r\n      a[0].img = files.base64;\r\n      console.log(a);\r\n        this.setState({members: a});\r\n        console.log(\"files: -> \", this.state.members[0]); */\n      this.setState({\n        members: [{\n          image: files.base64\n        }]\n      });\n      /* this.setState(prevState => ({\r\n        members: [...prevState.members, { img: files.base64 }]\r\n      })); */\n\n      /* console.log('this.state.members[0].img: => ', this.state.members[0].img); */\n\n      /* for(let i = 0; i < this.state.members.length; i++) {\r\n        console.log('this.state.members[' + i + '].img: => ', this.state.members[i].img);\r\n      } */\n    }\n    /* --------------------------------- */\n\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.edit) {\n        this.setState({\n          projectName: nextProps.name,\n          members: nextProps.members\n        });\n      } else if (nextProps.editTask) {\n        this.setState({\n          taskName: nextProps.taskName\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.props.modal) {\n        return null;\n      }\n\n      document.onkeyup = function (e) {\n        if (e.keyCode === 27 && _this2.props.modal) {\n          _this2.onClose();\n        }\n      };\n\n      var members = this.state.members; // Create task modal\n\n      if (this.props.task) {\n        var teamMembers = this.props.projects.project.teamMembers;\n        var _this$props$auth$user = this.props.auth.user,\n            name = _this$props$auth$user.name,\n            email = _this$props$auth$user.email; // Assignee dropdown in Modal\n\n        var membersOptions = teamMembers.map(function (member, index) {\n          return React.createElement(\"option\", {\n            key: index,\n            value: member.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, member.name);\n        }); // Due date dropdown in Modal\n\n        var MONTHS = new Array(12).fill(1);\n        var DAYS = new Array(31).fill(1);\n        var monthsOptions = MONTHS.map(function (month, i) {\n          return React.createElement(\"option\", {\n            key: i,\n            value: i + 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 307\n            },\n            __self: this\n          }, i < 9 && \"0\", i + 1);\n        });\n        var daysOptions = DAYS.map(function (day, i) {\n          return React.createElement(\"option\", {\n            key: i,\n            value: i + 1,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 314\n            },\n            __self: this\n          }, i < 9 && \"0\", i + 1);\n        });\n        return React.createElement(\"form\", {\n          onSubmit: this.createTask,\n          className: \"modal\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"close-modal\",\n          onClick: this.onClose,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, \"\\xD7\"), React.createElement(\"h1\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325\n          },\n          __self: this\n        }, \"Create task\"), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, \"Task Name (required)\"), React.createElement(\"input\", {\n          required: true,\n          onChange: this.onChange,\n          value: this.state.taskName,\n          id: \"taskName\",\n          type: \"text\",\n          placeholder: \"What is the task?\",\n          className: \"form-input\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"split\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, \"Assignee\"), React.createElement(\"select\", {\n          onChange: this.onSelectChange,\n          value: this.state.assignee,\n          id: \"assignee\",\n          type: \"text\",\n          className: \"form-input task-input-split\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          disabled: true,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Assign to\"), React.createElement(\"option\", {\n          value: email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, name + \" (You)\"), membersOptions)), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"form-label\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359\n          },\n          __self: this\n        }, \"Due Date\"), React.createElement(\"div\", {\n          className: \"split\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360\n          },\n          __self: this\n        }, React.createElement(\"select\", {\n          required: this.state.dayDue ? true : false,\n          onChange: this.onSelectChange,\n          value: this.state.monthDue,\n          id: \"monthDue\",\n          type: \"text\",\n          className: \"form-input task-input-split month-due\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          disabled: true,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, \"Month\"), monthsOptions), React.createElement(\"select\", {\n          required: this.state.monthDue ? true : false,\n          onChange: this.onSelectChange,\n          value: this.state.dayDue,\n          id: \"dayDue\",\n          type: \"text\",\n          className: \"form-input task-input-split\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        }, React.createElement(\"option\", {\n          disabled: true,\n          value: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, \"Day\"), daysOptions))))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"main-btn update-project\",\n          type: \"submit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392\n          },\n          __self: this\n        }, \"Create Task\")));\n      } // Edit Task Modal\n      else if (this.props.editTask) {\n          var _teamMembers = this.props.projects.project.teamMembers;\n          var _this$props$auth$user2 = this.props.auth.user,\n              _name = _this$props$auth$user2.name,\n              _email = _this$props$auth$user2.email;\n          var _this$props = this.props,\n              assignee = _this$props.assignee,\n              dateDue = _this$props.dateDue,\n              taskId = _this$props.taskId;\n          var assigneeName;\n          var assignedMonth = moment(dateDue).month() + 1;\n          var assignedDay = dateDue.split(\" \")[1]; // Find name from email\n\n          _teamMembers.forEach(function (member) {\n            if (member.email === assignee) {\n              assigneeName = member.name;\n            } else if (assignee) {\n              assigneeName = _name + \" (You)\";\n            }\n          }); // Assignee dropdown in Modal\n\n\n          var _membersOptions = _teamMembers.map(function (member, index) {\n            if (member.name !== assigneeName) {\n              return React.createElement(\"option\", {\n                key: member._id,\n                value: member.email,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 424\n                },\n                __self: this\n              }, member.name);\n            }\n\n            return null;\n          }); // Due date dropdown in Modal\n\n\n          var _MONTHS = new Array(12).fill(1);\n\n          var _DAYS = new Array(31).fill(1);\n\n          var _monthsOptions = _MONTHS.map(function (month, i) {\n            return React.createElement(\"option\", {\n              key: i,\n              value: i + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 438\n              },\n              __self: this\n            }, i < 9 && \"0\", i + 1);\n          });\n\n          var _daysOptions = _DAYS.map(function (day, i) {\n            return React.createElement(\"option\", {\n              key: i,\n              value: i + 1,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 446\n              },\n              __self: this\n            }, i < 9 && \"0\", i + 1);\n          });\n\n          return React.createElement(\"form\", {\n            className: \"modal\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 453\n            },\n            __self: this\n          }, React.createElement(\"span\", {\n            className: \"close-modal\",\n            onClick: this.onClose,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454\n            },\n            __self: this\n          }, \"\\xD7\"), React.createElement(\"h1\", {\n            className: \"header\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 457\n            },\n            __self: this\n          }, \"Edit task\"), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 458\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 459\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 460\n            },\n            __self: this\n          }, \"Task Name (required)\"), React.createElement(\"input\", {\n            required: true,\n            onChange: this.onChange,\n            value: this.state.taskName,\n            id: \"taskName\",\n            type: \"text\",\n            placeholder: \"What is the task?\",\n            className: \"form-input\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 461\n            },\n            __self: this\n          }))), React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 472\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"split\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 473\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 474\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 475\n            },\n            __self: this\n          }, \"Assignee\"), React.createElement(\"select\", {\n            onChange: this.onSelectChange,\n            value: this.state.assignee,\n            id: \"assignee\",\n            type: \"text\",\n            className: \"form-input task-input-split\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 476\n            },\n            __self: this\n          }, !assignee && React.createElement(\"option\", {\n            disabled: true,\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 484\n            },\n            __self: this\n          }, \"Assign to\"), assignee && React.createElement(\"option\", {\n            value: assignee,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 488\n            },\n            __self: this\n          }, assigneeName), assigneeName !== _name + \" (You)\" && React.createElement(\"option\", {\n            value: _email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490\n            },\n            __self: this\n          }, _name + \" (You)\"), _membersOptions)), React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-label\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 496\n            },\n            __self: this\n          }, \"Due Date\"), React.createElement(\"div\", {\n            className: \"split\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 497\n            },\n            __self: this\n          }, React.createElement(\"select\", {\n            required: this.state.dayDue ? true : false,\n            onChange: this.onSelectChange,\n            value: this.state.monthDue || parseInt(assignedMonth).toString(),\n            id: \"monthDue\",\n            type: \"text\",\n            className: \"form-input task-input-split month-due\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 498\n            },\n            __self: this\n          }, !dateDue && React.createElement(\"option\", {\n            disabled: true,\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 509\n            },\n            __self: this\n          }, \"Month\"), _monthsOptions), React.createElement(\"select\", {\n            required: this.state.monthDue ? true : false,\n            onChange: this.onSelectChange,\n            value: this.state.dayDue || parseInt(assignedDay).toString(),\n            id: \"dayDue\",\n            type: \"text\",\n            className: \"form-input task-input-split\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 515\n            },\n            __self: this\n          }, !dateDue && React.createElement(\"option\", {\n            disabled: true,\n            value: \"\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 526\n            },\n            __self: this\n          }, \"Day\"), _daysOptions))))), React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 536\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            className: \"main-btn update-project\",\n            type: \"button\",\n            onClick: this.updateTask.bind(this, taskId),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 537\n            },\n            __self: this\n          }, \"Update Task\"), React.createElement(\"button\", {\n            className: \"main-btn delete-project\",\n            onClick: this.deleteTask.bind(this, taskId),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 544\n            },\n            __self: this\n          }, \"Delete Task\")));\n        } // Edit project modal\n        else if (this.props.edit) {\n            return React.createElement(\"div\", {\n              className: \"modal\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 558\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"close-modal\",\n              onClick: this.onClose,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 559\n              },\n              __self: this\n            }, \"\\xD7\"), React.createElement(\"h1\", {\n              className: \"header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 562\n              },\n              __self: this\n            }, \"Edit menu category\"), React.createElement(\"p\", {\n              className: \"created-by\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 563\n              },\n              __self: this\n            }, \"Created by \", this.props.owner.name, \" (\", this.props.owner.email, \")\"), React.createElement(\"div\", {\n              className: \"form-group\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 566\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 567\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"form-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 568\n              },\n              __self: this\n            }, \"Category (required)\"), React.createElement(\"input\", {\n              onChange: this.onChange,\n              value: this.state.projectName,\n              id: \"projectName\",\n              type: \"text\",\n              placeholder: \"My Awesome Project\",\n              className: \"form-input\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 569\n              },\n              __self: this\n            }))), React.createElement(\"div\", {\n              className: \"form-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 579\n              },\n              __self: this\n            }, \"Add menu items (optional)\"), React.createElement(\"div\", {\n              className: \"members-edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 581\n              },\n              __self: this\n            }, members.map(function (val, id) {\n              var memberId = \"member-\".concat(id),\n                  emailId = \"email-\".concat(id),\n                  imageId = \"image-\".concat(id);\n              return React.createElement(\"div\", {\n                className: \"split\",\n                key: id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 590\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                className: \"form-label\",\n                htmlFor: memberId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 591\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                \"data-id\": id,\n                id: memberId,\n                value: members[id].name,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 593\n                },\n                __self: this\n              })), React.createElement(\"label\", {\n                className: \"form-label split-email\",\n                htmlFor: emailId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 603\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                \"data-id\": id,\n                id: emailId,\n                value: members[id].email,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 605\n                },\n                __self: this\n              })), React.createElement(\"label\", {\n                className: \"form-label split-email\",\n                htmlFor: imageId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 615\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                placeholder: \"Image URL\",\n                type: \"text\",\n                name: \"image\",\n                \"data-id\": id,\n                id: imageId,\n                value: members[id].image,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 616\n                },\n                __self: this\n              })), React.createElement(\"span\", {\n                className: \"delete\",\n                onClick: _this2.deleteMember.bind(_this2, id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 628\n                },\n                __self: this\n              }, \"REMOVE\"));\n            })), React.createElement(\"button\", {\n              className: \"main-btn add-members\",\n              onClick: this.addMember,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 639\n              },\n              __self: this\n            }, \"Add another menu item\"), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 642\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"main-btn update-project\",\n              onClick: this.updateProject.bind(this, this.props.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 643\n              },\n              __self: this\n            }, \"Update Category\"), this.props.owner.id === this.props.auth.user.id ? React.createElement(\"button\", {\n              className: \"main-btn delete-project\",\n              onClick: this.deleteProject.bind(this, this.props.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 650\n              },\n              __self: this\n            }, \"Delete Category\") : null));\n          } // Create project modal\n          else return React.createElement(\"div\", {\n              className: \"modal\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 665\n              },\n              __self: this\n            }, React.createElement(\"span\", {\n              className: \"close-modal\",\n              onClick: this.onClose,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 666\n              },\n              __self: this\n            }, \"\\xD7\"), React.createElement(\"h1\", {\n              className: \"header\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 669\n              },\n              __self: this\n            }, \"Create a menu category\"), React.createElement(\"div\", {\n              className: \"form-group\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 670\n              },\n              __self: this\n            }, React.createElement(\"label\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 671\n              },\n              __self: this\n            }, React.createElement(\"div\", {\n              className: \"form-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 672\n              },\n              __self: this\n            }, \"Category (required)\"), React.createElement(\"input\", {\n              onChange: this.onChange,\n              value: this.state.projectName,\n              id: \"projectName\",\n              type: \"text\",\n              placeholder: \"ex.entree, side-dish, beverages\",\n              className: \"form-input\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 673\n              },\n              __self: this\n            }))), React.createElement(\"div\", {\n              className: \"form-label\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 683\n              },\n              __self: this\n            }, \"Add menu items (required)\"), React.createElement(\"div\", {\n              className: \"members\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 687\n              },\n              __self: this\n            }, members.map(function (val, id) {\n              var memberId = \"member-\".concat(id),\n                  emailId = \"email-\".concat(id),\n                  imageId = \"image-\".concat(id);\n              return React.createElement(\"div\", {\n                className: \"split\",\n                key: id,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 693\n                },\n                __self: this\n              }, React.createElement(\"label\", {\n                className: \"form-label\",\n                htmlFor: memberId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 694\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                placeholder: \"menu\",\n                type: \"text\",\n                name: \"name\",\n                \"data-id\": id,\n                id: memberId,\n                value: members[id].name,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 695\n                },\n                __self: this\n              })), React.createElement(\"label\", {\n                className: \"form-label split-email\",\n                htmlFor: emailId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 706\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                placeholder: \"price\",\n                type: \"text\",\n                name: \"email\",\n                \"data-id\": id,\n                id: emailId,\n                value: members[id].email,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 707\n                },\n                __self: this\n              })), React.createElement(\"label\", {\n                className: \"form-label split-email\",\n                htmlFor: imageId,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 720\n                },\n                __self: this\n              }, React.createElement(\"input\", {\n                placeholder: \"Image URL\",\n                type: \"text\",\n                name: \"image\",\n                \"data-id\": id,\n                id: imageId,\n                value: members[id].image,\n                className: \"form-input\",\n                onChange: _this2.onChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 721\n                },\n                __self: this\n              })), React.createElement(\"span\", {\n                className: \"delete\",\n                onClick: _this2.deleteMember.bind(_this2, id),\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 763\n                },\n                __self: this\n              }, \"REMOVE\"));\n            })), React.createElement(\"button\", {\n              className: \"main-btn add-members\",\n              onClick: this.addMember,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 775\n              },\n              __self: this\n            }, \"Add another menu\"), React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 778\n              },\n              __self: this\n            }, React.createElement(\"button\", {\n              className: \"main-btn create-project\",\n              onClick: this.createProject,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 779\n              },\n              __self: this\n            }, \"Create Category\")));\n    }\n  }]);\n\n  return Modal;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    projects: state.projects,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createProject: createProject,\n  updateProject: updateProject,\n  deleteProject: deleteProject,\n  createTask: createTask,\n  deleteTask: deleteTask,\n  updateTask: updateTask\n})(withRouter(Modal));","map":{"version":3,"sources":["c:/Users/micah/Documents/Main/Projects/restaurant-application/restaurant_online_order_application/client/src/components/dashboard/MainContent/Modal/Modal.js"],"names":["React","Component","connect","withRouter","createProject","updateProject","deleteProject","createTask","deleteTask","updateTask","moment","Modal","state","projectName","members","name","email","image","taskName","assignee","monthDue","dayDue","taskId","images","fileSelectedHandler","event","console","log","target","files","length","i","onChange","e","includes","dataset","id","value","setState","addMember","prevState","deleteMember","index","array","splice","project","props","onClose","window","location","reload","history","onSelectChange","preventDefault","fullDate","Date","split","momentDate","_d","toString","finalDate","data","projects","_id","dateDue","dates","indexOf","task","base64","nextProps","edit","editTask","modal","document","onkeyup","keyCode","teamMembers","auth","user","membersOptions","map","member","MONTHS","Array","fill","DAYS","monthsOptions","month","daysOptions","day","assigneeName","assignedMonth","assignedDay","forEach","parseInt","bind","owner","val","memberId","emailId","imageId","mapStateToProps","tasks"],"mappings":"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","sourcesContent":["/* import FileBase64 from 'react-file-base64'; */\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport {\r\n  createProject,\r\n  updateProject,\r\n  deleteProject\r\n} from \"../../../../actions/projectsActions\";\r\nimport {\r\n  createTask,\r\n  deleteTask,\r\n  updateTask\r\n} from \"../../../../actions/taskActions\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport \"./Modal.scss\";\r\n\r\nclass Modal extends Component {\r\n  state = {\r\n    projectName: \"\",\r\n    members: [{ name: \"\", email: \"\", image: \"\" }],\r\n    taskName: \"\",\r\n    assignee: \"\",\r\n    monthDue: \"\",\r\n    dayDue: \"\",\r\n    taskId: \"\",\r\n    images: []\r\n  };\r\n\r\n/* --------------------------------- */\r\n  fileSelectedHandler = event => {\r\n    console.log(event.target.files.length);\r\n    \r\n    // try to find a storage to save this inputs\r\n    for(let i = 0; i < event.target.files.length; i++) {\r\n      console.log(event.target.files[i]);\r\n    }\r\n  }\r\n\r\n  getFiles(files){\r\n    /* console.log(\"files: -> \", files.base64); */\r\n    // base64 encoded here\r\n    /* console.log(\"files: -> \", files.base64); */\r\n    \r\n    /* let a = this.state.members.slice();\r\n    a[0].img = files.base64;\r\n    console.log(a);\r\n\r\n    this.setState({members: a});\r\n\r\n    console.log(\"files: -> \", this.state.members[0]); */\r\n    this.setState({ members: [{ image: files.base64 }] })\r\n    /* this.setState(prevState => ({\r\n      members: [...prevState.members, { img: files.base64 }]\r\n    })); */\r\n\r\n    /* console.log('this.state.members[0].img: => ', this.state.members[0].img); */\r\n\r\n    /* for(let i = 0; i < this.state.members.length; i++) {\r\n      console.log('this.state.members[' + i + '].img: => ', this.state.members[i].img);\r\n    } */\r\n    \r\n  }\r\n/* --------------------------------- */\r\n\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.edit) {\r\n      this.setState({\r\n        projectName: nextProps.name,\r\n        members: nextProps.members\r\n      });\r\n    } else if (nextProps.editTask) {\r\n      this.setState({\r\n        taskName: nextProps.taskName\r\n      });\r\n    }\r\n  }\r\n\r\n  onChange = e => {\r\n    if ([\"name\", \"email\", \"image\"].includes(e.target.name)) {\r\n      let members = [...this.state.members];\r\n\r\n      console.log(\"e.target: \", e.target);\r\n\r\n      members[e.target.dataset.id][e.target.name] = e.target.value;\r\n      this.setState({ members });\r\n    } else {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n    }    \r\n/*     if ([\"name\", \"email\"].includes(e.target.name)) {\r\n      let members = [...this.state.members];\r\n      members[e.target.dataset.id][e.target.name] = e.target.value;\r\n      this.setState({ members });\r\n    } else {\r\n      this.setState({ [e.target.id]: e.target.value });\r\n    } */\r\n  };\r\n\r\n  addMember = e => {\r\n    this.setState(prevState => ({\r\n      members: [...prevState.members, { name: \"\", email: \"\", image: \"\"}]\r\n    }));\r\n  };\r\n\r\n  deleteMember = index => {\r\n    let array = [...this.state.members];\r\n    array.splice(index, 1);\r\n    this.setState({ members: array });\r\n  };\r\n\r\n  createProject = () => {\r\n    let project = {\r\n      projectName: this.state.projectName,\r\n      members: this.state.members\r\n    };\r\n\r\n    console.log(project);\r\n\r\n    this.props.createProject(project);\r\n    this.onClose();\r\n  };\r\n\r\n  updateProject = async id => {\r\n    let project = {\r\n      id: this.props.id,\r\n      projectName: this.state.projectName,\r\n      members: this.state.members\r\n    };\r\n\r\n    await this.props.updateProject(project);\r\n\r\n    this.onClose();\r\n    window.location.reload();\r\n  };\r\n\r\n  deleteProject = id => {\r\n    this.props.deleteProject(id, this.props.history);\r\n    this.onClose();\r\n  };\r\n\r\n  deleteTask = id => {\r\n    this.props.deleteTask(id);\r\n    this.onClose();\r\n  };\r\n\r\n  onClose = e => {\r\n    this.props.onClose && this.props.onClose(e);\r\n    this.setState({\r\n      projectName: \"\",\r\n      taskName: \"\",\r\n      assignee: \"\",\r\n      monthDue: \"\",\r\n      dayDue: \"\",\r\n      members: [{ name: \"\", email: \"\", image: \"\" }]\r\n    });\r\n  };\r\n\r\n  onSelectChange = e => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  };\r\n\r\n  createTask = e => {\r\n    e.preventDefault();\r\n\r\n    let fullDate =\r\n      this.state.monthDue +\r\n      \"-\" +\r\n      this.state.dayDue +\r\n      \"-\" +\r\n      Date().split(\" \")[3];\r\n\r\n    let momentDate = moment(fullDate, \"MM-DD-YYYY\")\r\n      ._d.toString()\r\n      .split(\" \");\r\n\r\n    let finalDate = momentDate[1] + \" \" + momentDate[2];\r\n\r\n    const data = {\r\n      project: this.props.projects.project._id,\r\n      taskName: this.state.taskName,\r\n      assignee: this.state.assignee,\r\n      dateDue: finalDate\r\n    };\r\n\r\n    this.props.createTask(data);\r\n\r\n    this.onClose();\r\n  };\r\n\r\n  updateTask = id => {\r\n    let finalDate;\r\n\r\n    let dates = [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\"\r\n    ];\r\n\r\n    if (!this.state.monthDue && !this.state.dayDue) {\r\n      finalDate = this.props.dateDue;\r\n    } else if (\r\n      this.props.dateDue &&\r\n      this.props.dateDue !== \"Date undefined\" &&\r\n      !this.state.monthDue &&\r\n      this.state.dayDue\r\n    ) {\r\n      let fullDate =\r\n        dates.indexOf(this.props.dateDue.split(\" \")[0]) +\r\n        1 +\r\n        \"-\" +\r\n        this.state.dayDue +\r\n        \"-\" +\r\n        Date().split(\" \")[3];\r\n\r\n      let momentDate = moment(fullDate, \"MM-DD-YYYY\")\r\n        ._d.toString()\r\n        .split(\" \");\r\n\r\n      finalDate = momentDate[1] + \" \" + momentDate[2];\r\n    } else if (\r\n      this.props.dateDue &&\r\n      this.props.dateDue !== \"Date undefined\" &&\r\n      !this.state.dayDue &&\r\n      this.state.monthDue\r\n    ) {\r\n      let fullDate =\r\n        this.state.monthDue +\r\n        \"-\" +\r\n        this.props.dateDue.split(\" \")[1] +\r\n        \"-\" +\r\n        Date().split(\" \")[3];\r\n\r\n      let momentDate = moment(fullDate, \"MM-DD-YYYY\")\r\n        ._d.toString()\r\n        .split(\" \");\r\n\r\n      finalDate = momentDate[1] + \" \" + momentDate[2];\r\n    } else {\r\n      let fullDate =\r\n        this.state.monthDue +\r\n        \"-\" +\r\n        this.state.dayDue +\r\n        \"-\" +\r\n        Date().split(\" \")[3];\r\n\r\n      let momentDate = moment(fullDate, \"MM-DD-YYYY\")\r\n        ._d.toString()\r\n        .split(\" \");\r\n\r\n      finalDate = momentDate[1] + \" \" + momentDate[2];\r\n    }\r\n\r\n    let task = {\r\n      id: id,\r\n      taskName: this.state.taskName,\r\n      dateDue: finalDate,\r\n      assignee: this.state.assignee || this.props.assignee\r\n    };\r\n\r\n    this.props.updateTask(task);\r\n\r\n    this.onClose();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.modal) {\r\n      return null;\r\n    }\r\n\r\n    document.onkeyup = e => {\r\n      if (e.keyCode === 27 && this.props.modal) {\r\n        this.onClose();\r\n      }\r\n    };\r\n\r\n    let { members } = this.state;\r\n\r\n    // Create task modal\r\n    if (this.props.task) {\r\n      const { teamMembers } = this.props.projects.project;\r\n      const { name, email/* , img */ } = this.props.auth.user;\r\n\r\n      // Assignee dropdown in Modal\r\n      let membersOptions = teamMembers.map((member, index) => (\r\n        <option key={index} value={member.email}>\r\n          {member.name}\r\n        </option>\r\n      ));\r\n\r\n      // Due date dropdown in Modal\r\n      const MONTHS = new Array(12).fill(1);\r\n      const DAYS = new Array(31).fill(1);\r\n\r\n      let monthsOptions = MONTHS.map((month, i) => (\r\n        <option key={i} value={i + 1}>\r\n          {i < 9 && \"0\"}\r\n          {i + 1}\r\n        </option>\r\n      ));\r\n\r\n      let daysOptions = DAYS.map((day, i) => (\r\n        <option key={i} value={i + 1}>\r\n          {i < 9 && \"0\"}\r\n          {i + 1}\r\n        </option>\r\n      ));\r\n\r\n      return (\r\n        <form onSubmit={this.createTask} className=\"modal\">\r\n          <span className=\"close-modal\" onClick={this.onClose}>\r\n            &times;\r\n          </span>\r\n          <h1 className=\"header\">Create task</h1>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <div className=\"form-label\">Task Name (required)</div>\r\n              <input\r\n                required\r\n                onChange={this.onChange}\r\n                value={this.state.taskName}\r\n                id=\"taskName\"\r\n                type=\"text\"\r\n                placeholder={\"What is the task?\"}\r\n                className=\"form-input\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"split\">\r\n              <label>\r\n                <div className=\"form-label\">Assignee</div>\r\n                <select\r\n                  onChange={this.onSelectChange}\r\n                  value={this.state.assignee}\r\n                  id=\"assignee\"\r\n                  type=\"text\"\r\n                  className=\"form-input task-input-split\"\r\n                >\r\n                  <option disabled value=\"\">\r\n                    Assign to\r\n                  </option>\r\n                  <option value={email}>{name + \" (You)\"}</option>\r\n                  {membersOptions}\r\n                </select>\r\n              </label>\r\n              <label>\r\n                <div className=\"form-label\">Due Date</div>\r\n                <div className=\"split\">\r\n                  <select\r\n                    required={this.state.dayDue ? true : false}\r\n                    onChange={this.onSelectChange}\r\n                    value={this.state.monthDue}\r\n                    id=\"monthDue\"\r\n                    type=\"text\"\r\n                    className=\"form-input task-input-split month-due\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Month\r\n                    </option>\r\n                    {monthsOptions}\r\n                  </select>\r\n                  <select\r\n                    required={this.state.monthDue ? true : false}\r\n                    onChange={this.onSelectChange}\r\n                    value={this.state.dayDue}\r\n                    id=\"dayDue\"\r\n                    type=\"text\"\r\n                    className=\"form-input task-input-split\"\r\n                  >\r\n                    <option disabled value=\"\">\r\n                      Day\r\n                    </option>\r\n                    {daysOptions}\r\n                  </select>\r\n                </div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button className=\"main-btn update-project\" type=\"submit\">\r\n              Create Task\r\n            </button>\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    // Edit Task Modal\r\n    else if (this.props.editTask) {\r\n      const { teamMembers } = this.props.projects.project;\r\n      const { name, email } = this.props.auth.user;\r\n\r\n      const { assignee, dateDue, taskId } = this.props;\r\n      let assigneeName;\r\n\r\n      let assignedMonth = moment(dateDue).month() + 1;\r\n      let assignedDay = dateDue.split(\" \")[1];\r\n\r\n      // Find name from email\r\n      teamMembers.forEach(member => {\r\n        if (member.email === assignee) {\r\n          assigneeName = member.name;\r\n        } else if (assignee) {\r\n          assigneeName = name + \" (You)\";\r\n        }\r\n      });\r\n\r\n      // Assignee dropdown in Modal\r\n      let membersOptions = teamMembers.map((member, index) => {\r\n        if (member.name !== assigneeName) {\r\n          return (\r\n            <option key={member._id} value={member.email}>\r\n              {member.name}\r\n            </option>\r\n          );\r\n        }\r\n        return null;\r\n      });\r\n\r\n      // Due date dropdown in Modal\r\n      const MONTHS = new Array(12).fill(1);\r\n      const DAYS = new Array(31).fill(1);\r\n\r\n      let monthsOptions = MONTHS.map((month, i) => {\r\n        return (\r\n          <option key={i} value={i + 1}>\r\n            {i < 9 && \"0\"}\r\n            {i + 1}\r\n          </option>\r\n        );\r\n      });\r\n\r\n      let daysOptions = DAYS.map((day, i) => (\r\n        <option key={i} value={i + 1}>\r\n          {i < 9 && \"0\"}\r\n          {i + 1}\r\n        </option>\r\n      ));\r\n\r\n      return (\r\n        <form className=\"modal\">\r\n          <span className=\"close-modal\" onClick={this.onClose}>\r\n            &times;\r\n          </span>\r\n          <h1 className=\"header\">Edit task</h1>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <div className=\"form-label\">Task Name (required)</div>\r\n              <input\r\n                required\r\n                onChange={this.onChange}\r\n                value={this.state.taskName}\r\n                id=\"taskName\"\r\n                type=\"text\"\r\n                placeholder={\"What is the task?\"}\r\n                className=\"form-input\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"split\">\r\n              <label>\r\n                <div className=\"form-label\">Assignee</div>\r\n                <select\r\n                  onChange={this.onSelectChange}\r\n                  value={this.state.assignee}\r\n                  id=\"assignee\"\r\n                  type=\"text\"\r\n                  className=\"form-input task-input-split\"\r\n                >\r\n                  {!assignee && (\r\n                    <option disabled value=\"\">\r\n                      Assign to\r\n                    </option>\r\n                  )}\r\n                  {assignee && <option value={assignee}>{assigneeName}</option>}\r\n                  {assigneeName !== name + \" (You)\" && (\r\n                    <option value={email}>{name + \" (You)\"}</option>\r\n                  )}\r\n                  {membersOptions}\r\n                </select>\r\n              </label>\r\n              <label>\r\n                <div className=\"form-label\">Due Date</div>\r\n                <div className=\"split\">\r\n                  <select\r\n                    required={this.state.dayDue ? true : false}\r\n                    onChange={this.onSelectChange}\r\n                    value={\r\n                      this.state.monthDue || parseInt(assignedMonth).toString()\r\n                    }\r\n                    id=\"monthDue\"\r\n                    type=\"text\"\r\n                    className=\"form-input task-input-split month-due\"\r\n                  >\r\n                    {!dateDue && (\r\n                      <option disabled value=\"\">\r\n                        Month\r\n                      </option>\r\n                    )}\r\n                    {monthsOptions}\r\n                  </select>\r\n                  <select\r\n                    required={this.state.monthDue ? true : false}\r\n                    onChange={this.onSelectChange}\r\n                    value={\r\n                      this.state.dayDue || parseInt(assignedDay).toString()\r\n                    }\r\n                    id=\"dayDue\"\r\n                    type=\"text\"\r\n                    className=\"form-input task-input-split\"\r\n                  >\r\n                    {!dateDue && (\r\n                      <option disabled value=\"\">\r\n                        Day\r\n                      </option>\r\n                    )}\r\n                    {daysOptions}\r\n                  </select>\r\n                </div>\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className=\"main-btn update-project\"\r\n              type=\"button\"\r\n              onClick={this.updateTask.bind(this, taskId)}\r\n            >\r\n              Update Task\r\n            </button>\r\n            <button\r\n              className=\"main-btn delete-project\"\r\n              onClick={this.deleteTask.bind(this, taskId)}\r\n            >\r\n              Delete Task\r\n            </button>\r\n          </div>\r\n        </form>\r\n      );\r\n    }\r\n\r\n    // Edit project modal\r\n    else if (this.props.edit) {\r\n      return (\r\n        <div className=\"modal\">\r\n          <span className=\"close-modal\" onClick={this.onClose}>\r\n            &times;\r\n          </span>\r\n          <h1 className=\"header\">Edit menu category</h1>\r\n          <p className=\"created-by\">\r\n            Created by {this.props.owner.name} ({this.props.owner.email})\r\n          </p>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <div className=\"form-label\">Category (required)</div>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.projectName}\r\n                id=\"projectName\"\r\n                type=\"text\"\r\n                placeholder={\"My Awesome Project\"}\r\n                className=\"form-input\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-label\">Add menu items (optional)</div>\r\n          \r\n          <div className=\"members-edit\">\r\n            {members.map((val, id) => {\r\n              \r\n              let memberId = `member-${id}`,\r\n                emailId = `email-${id}`,\r\n                imageId = `image-${id}`;\r\n\r\n\r\n              return (\r\n                <div className=\"split\" key={id}>\r\n                  <label className=\"form-label\" htmlFor={memberId}>\r\n                    \r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      data-id={id}\r\n                      id={memberId}\r\n                      value={members[id].name}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n                  <label className=\"form-label split-email\" htmlFor={emailId}>\r\n                    \r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      data-id={id}\r\n                      id={emailId}\r\n                      value={members[id].email}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n                  <label className=\"form-label split-email\" htmlFor={imageId}>\r\n                    <input\r\n                      placeholder=\"Image URL\"\r\n                      type=\"text\"\r\n                      name=\"image\"\r\n                      data-id={id}\r\n                      id={imageId}\r\n                      value={members[id].image}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n\r\n                  <span\r\n                    className=\"delete\"\r\n                    onClick={this.deleteMember.bind(this, id)}\r\n                  >\r\n                    REMOVE\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n            \r\n          </div>\r\n          <button className=\"main-btn add-members\" onClick={this.addMember}>\r\n            Add another menu item\r\n          </button>\r\n          <div>\r\n            <button\r\n              className=\"main-btn update-project\"\r\n              onClick={this.updateProject.bind(this, this.props.id)}\r\n            >\r\n              Update Category\r\n            </button>\r\n            {this.props.owner.id === this.props.auth.user.id ? (\r\n              <button\r\n                className=\"main-btn delete-project\"\r\n                onClick={this.deleteProject.bind(this, this.props.id)}\r\n              >\r\n                Delete Category\r\n              </button>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    // Create project modal\r\n    else\r\n      return (\r\n        <div className=\"modal\">\r\n          <span className=\"close-modal\" onClick={this.onClose}>\r\n            &times;\r\n          </span>\r\n          <h1 className=\"header\">Create a menu category</h1>\r\n          <div className=\"form-group\">\r\n            <label>\r\n              <div className=\"form-label\">Category (required)</div>\r\n              <input\r\n                onChange={this.onChange}\r\n                value={this.state.projectName}\r\n                id=\"projectName\"\r\n                type=\"text\"\r\n                placeholder=\"ex.entree, side-dish, beverages\"\r\n                className=\"form-input\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-label\">Add menu items (required)</div>\r\n          {/* <button className=\"main-btn add-members\" onClick={this.addMember}>\r\n            Add another member\r\n          </button> */}\r\n          <div className=\"members\">\r\n            {members.map((val, id) => {\r\n              let memberId = `member-${id}`,\r\n                emailId = `email-${id}`,\r\n                imageId = `image-${id}`;\r\n              return (\r\n                <div className=\"split\" key={id}>\r\n                  <label className=\"form-label\" htmlFor={memberId}>\r\n                    <input\r\n                      placeholder=\"menu\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      data-id={id}\r\n                      id={memberId}\r\n                      value={members[id].name}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n                  <label className=\"form-label split-email\" htmlFor={emailId}>\r\n                    <input\r\n                      placeholder=\"price\"\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      data-id={id}\r\n                      id={emailId}\r\n                      value={members[id].email}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n                  \r\n{/* -------------------------------------------------------------------------------- */}\r\n                  <label className=\"form-label split-email\" htmlFor={imageId}>\r\n                    <input\r\n                      placeholder=\"Image URL\"\r\n                      type=\"text\"\r\n                      name=\"image\"\r\n                      data-id={id}\r\n                      id={imageId}\r\n                      value={members[id].image}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />\r\n                  </label>\r\n\r\n                  {/* input-file (image) */}\r\n                  \r\n                  {/* <label className=\"form-label split-email\" htmlFor={imageId}>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"image\"\r\n                      data-id={id}\r\n                      id={imageId}\r\n                      value={members[id].image}\r\n                      className=\"form-input\"\r\n                      onChange={this.onChange}\r\n                    />                 \r\n                  </label> */}                  \r\n                  \r\n                  \r\n                  \r\n                  {/* <label className=\"form-label split-email\" /* htmlFor={image} > */}\r\n                    {/* <input type=\"file\" onChange={this.fileSelectedHandler}/> */}\r\n\r\n                    {/* <img src={this.state.members.img} alt='Helpful alt text'/> */}\r\n\r\n                    {/* 내일 팁: base64 컨버트 하고 바로 위처럼 셋 업데이트 하자 */}\r\n                    {/* <FileBase64 htmlFor={imageId} multiple={ false } onDone={ this.getFiles.bind(this) } /> */}\r\n\r\n                    {/* this.setState({\r\n                      members: [{ img: this }]\r\n                    }); */}\r\n\r\n                  {/* </label> */}\r\n{/* -------------------------------------------------------------------------------- */}\r\n                  <span\r\n                    className=\"delete\"\r\n                    onClick={this.deleteMember.bind(this, id)}\r\n                  >\r\n                    REMOVE\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n\r\n\r\n          </div>\r\n          <button className=\"main-btn add-members\" onClick={this.addMember}>\r\n            Add another menu\r\n          </button>\r\n          <div>\r\n            <button\r\n              className=\"main-btn create-project\"\r\n              onClick={this.createProject}\r\n            >\r\n              Create Category\r\n            </button>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects,\r\n  tasks: state.tasks\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    createProject,\r\n    updateProject,\r\n    deleteProject,\r\n    createTask,\r\n    deleteTask,\r\n    updateTask\r\n  }\r\n)(withRouter(Modal));\r\n"]},"metadata":{},"sourceType":"module"}