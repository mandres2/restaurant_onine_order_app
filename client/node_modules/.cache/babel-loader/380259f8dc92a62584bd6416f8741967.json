{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\src\\\\components\\\\dashboard\\\\Layout-Business.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../../actions/projectsActions\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport Spinner from \"../common/Spinner\";\nimport SideNav from \"./SideNav/SideNav\";\nimport TopNav from \"./TopNav/TopNav\";\nimport Dashboard_Business from \"./MainContent/Dashboard-Business\";\nimport Tasks from \"./MainContent/Tasks\";\nimport Project from \"./MainContent/Project/Project\";\nimport NotFound from \"../404/404\";\nimport \"./Layout.scss\";\n\nvar Layout =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Layout, _Component);\n\n  function Layout() {\n    _classCallCheck(this, Layout);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Layout).apply(this, arguments));\n  }\n\n  _createClass(Layout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProjects();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$projects = this.props.projects,\n          projects = _this$props$projects.projects,\n          projectsLoading = _this$props$projects.projectsLoading;\n      var dashboardContent;\n\n      if (projects === null || projectsLoading) {\n        dashboardContent = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        });\n      } else if (projects.length > 0) {\n        dashboardContent = React.createElement(React.Fragment, null, React.createElement(SideNav, {\n          projects: projects,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, React.createElement(TopNav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/dashboard-business\",\n          projects: projects,\n          component: Dashboard_Business,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/tasks\",\n          projects: projects,\n          component: Tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/projects/:project\",\n          component: Project,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(Route, {\n          component: NotFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }))));\n      } else {\n        dashboardContent = React.createElement(React.Fragment, null, React.createElement(SideNav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(TopNav, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(Switch, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Route, {\n          exact: true,\n          path: \"/dashboard-business\",\n          projects: [],\n          component: Dashboard_Business,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }), React.createElement(Route, {\n          exact: true,\n          path: \"/tasks\",\n          component: Tasks,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), React.createElement(Route, {\n          component: NotFound,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }))));\n      }\n\n      return React.createElement(Router, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, dashboardContent));\n    }\n  }]);\n\n  return Layout;\n}(Component);\n\nLayout.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    projects: state.projects\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  getProjects: getProjects\n})(Layout));","map":{"version":3,"sources":["C:/Users/micah/Documents/Main/Projects/restaurant-application/restaurant_online_order_application/client/src/components/dashboard/Layout-Business.js"],"names":["React","Component","PropTypes","connect","getProjects","BrowserRouter","Router","Route","Switch","withRouter","Spinner","SideNav","TopNav","Dashboard_Business","Tasks","Project","NotFound","Layout","props","projects","projectsLoading","dashboardContent","length","propTypes","auth","object","isRequired","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../../actions/projectsActions\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  withRouter\r\n} from \"react-router-dom\";\r\n\r\nimport Spinner from \"../common/Spinner\";\r\nimport SideNav from \"./SideNav/SideNav\";\r\nimport TopNav from \"./TopNav/TopNav\";\r\nimport Dashboard_Business from \"./MainContent/Dashboard-Business\";\r\nimport Tasks from \"./MainContent/Tasks\";\r\nimport Project from \"./MainContent/Project/Project\";\r\nimport NotFound from \"../404/404\";\r\n\r\nimport \"./Layout.scss\";\r\n\r\nclass Layout extends Component {\r\n  componentDidMount() {\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects, projectsLoading } = this.props.projects;\r\n\r\n    let dashboardContent;\r\n\r\n    if (projects === null || projectsLoading) {\r\n      dashboardContent = <Spinner />;\r\n    } else if (projects.length > 0) {\r\n      dashboardContent = (\r\n        <>\r\n          <SideNav projects={projects} />\r\n          <div className=\"right\">\r\n            <TopNav />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/dashboard-business\"\r\n                projects={projects}\r\n                component={Dashboard_Business}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/tasks\"\r\n                projects={projects}\r\n                component={Tasks}\r\n              />\r\n              <Route exact path=\"/projects/:project\" component={Project} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      dashboardContent = (\r\n        <>\r\n          <SideNav />\r\n          <div className=\"right\">\r\n            <TopNav />\r\n            <Switch>\r\n              <Route\r\n                exact\r\n                path=\"/dashboard-business\"\r\n                projects={[]}\r\n                component={Dashboard_Business}\r\n              />\r\n              <Route exact path=\"/tasks\" component={Tasks} />\r\n              <Route component={NotFound} />\r\n            </Switch>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        <div className=\"wrapper\">{dashboardContent}</div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  projects: state.projects\r\n});\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    { getProjects }\r\n  )(Layout)\r\n);\r\n"]},"metadata":{},"sourceType":"module"}