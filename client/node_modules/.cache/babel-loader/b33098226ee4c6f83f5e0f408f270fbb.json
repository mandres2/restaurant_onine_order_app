{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { CREATE_TASK, UPDATE_TASK, DELETE_TASK, GET_TASKS, TASKS_LOADING } from \"../actions/types\";\nvar initialState = {\n  tasks: [],\n  tasksLoading: false\n};\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CREATE_TASK:\n      return _objectSpread({}, state, {\n        tasks: [action.payload].concat(_toConsumableArray(state.tasks))\n      });\n\n    case GET_TASKS:\n      return _objectSpread({}, state, {\n        tasks: action.payload,\n        tasksLoading: false\n      });\n\n    case UPDATE_TASK:\n      var index = state.tasks.findIndex(function (task) {\n        return task._id === action.payload._id;\n      });\n      state.tasks.splice(index, 1);\n      return _objectSpread({}, state, {\n        tasks: [action.payload].concat(_toConsumableArray(state.tasks))\n      });\n\n    case DELETE_TASK:\n      return _objectSpread({}, state, {\n        tasks: state.tasks.filter(function (task) {\n          return task._id !== action.payload;\n        })\n      });\n\n    case TASKS_LOADING:\n      return _objectSpread({}, state, {\n        tasksLoading: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/micah/Documents/Main/Projects/restaurant-application/restaurant_online_order_application/client/src/reducers/tasksReducer.js"],"names":["CREATE_TASK","UPDATE_TASK","DELETE_TASK","GET_TASKS","TASKS_LOADING","initialState","tasks","tasksLoading","state","action","type","payload","index","findIndex","task","_id","splice","filter"],"mappings":";;AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,SAJF,EAKEC,aALF,QAMO,kBANP;AAQA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,eAAe,YAAuC;AAAA,MAA9BC,KAA8B,uEAAtBH,YAAsB;AAAA,MAARI,MAAQ;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AACE,+BACKQ,KADL;AAEEF,QAAAA,KAAK,GAAGG,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACF,KAA5B;AAFP;;AAIF,SAAKH,SAAL;AACE,+BACKK,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE,OAFhB;AAGEJ,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKN,WAAL;AACE,UAAIW,KAAK,GAAGJ,KAAK,CAACF,KAAN,CAAYO,SAAZ,CACV,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAAhC;AAAA,OADM,CAAZ;AAIAP,MAAAA,KAAK,CAACF,KAAN,CAAYU,MAAZ,CAAmBJ,KAAnB,EAA0B,CAA1B;AAEA,+BACKJ,KADL;AAEEF,QAAAA,KAAK,GAAGG,MAAM,CAACE,OAAV,4BAAsBH,KAAK,CAACF,KAA5B;AAFP;;AAIF,SAAKJ,WAAL;AACE,+BACKM,KADL;AAEEF,QAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYW,MAAZ,CAAmB,UAAAH,IAAI;AAAA,iBAAIA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAxB;AAAA,SAAvB;AAFT;;AAIF,SAAKP,aAAL;AACE,+BACKI,KADL;AAEED,QAAAA,YAAY,EAAE;AAFhB;;AAIF;AACE,aAAOC,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\r\n  CREATE_TASK,\r\n  UPDATE_TASK,\r\n  DELETE_TASK,\r\n  GET_TASKS,\r\n  TASKS_LOADING\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  tasks: [],\r\n  tasksLoading: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: [action.payload, ...state.tasks]\r\n      };\r\n    case GET_TASKS:\r\n      return {\r\n        ...state,\r\n        tasks: action.payload,\r\n        tasksLoading: false\r\n      };\r\n    case UPDATE_TASK:\r\n      let index = state.tasks.findIndex(\r\n        task => task._id === action.payload._id\r\n      );\r\n\r\n      state.tasks.splice(index, 1);\r\n\r\n      return {\r\n        ...state,\r\n        tasks: [action.payload, ...state.tasks]\r\n      };\r\n    case DELETE_TASK:\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task._id !== action.payload)\r\n      };\r\n    case TASKS_LOADING:\r\n      return {\r\n        ...state,\r\n        tasksLoading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}