{"ast":null,"code":"import _classCallCheck from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\src\\\\components\\\\dashboard\\\\MainContent\\\\Dashboard-Customer.js\";\nimport React, { Component } from \"react\";\nimport \"./MainContent.scss\";\nimport \"./Dashboard.scss\";\nimport { connect } from \"react-redux\";\nimport Modal from \"./Modal/Modal\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      edit: false,\n      name: \"\",\n      members: [],\n      id: \"\",\n      owner: {}\n    };\n\n    _this.toggleModal = function (e) {\n      _this.setState({\n        modal: !_this.state.modal,\n        edit: false\n      });\n    };\n\n    _this.toggleEditModal = function (name, members, id, owner, e) {\n      e.stopPropagation();\n\n      _this.setState({\n        modal: !_this.state.modal,\n        edit: !_this.state.edit,\n        name: name,\n        members: members,\n        id: id,\n        owner: owner\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var projects = this.props.projects.projects;\n      var content;\n      var projectData = projects.sort().map(function (project) {\n        return React.createElement(\"div\", {\n          key: project._id,\n          className: \"project-icon\"\n          /* onClick={() => this.props.history.push(`/projects/${project._id}`)} */\n          ,\n          onClick: console.log(\"this is triggered!\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"project-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, project.name), React.createElement(\"div\", {\n          className: \"project-info-button\",\n          onClick: _this2.toggleEditModal.bind(_this2, project.name, project.teamMembers, project._id, project.owner),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Edit category\"));\n      });\n\n      if (projects.length > 0) {\n        // At least one project\n        content = React.createElement(React.Fragment, null, React.createElement(\"button\", {\n          className: \"main-btn\",\n          onClick: this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"Create another menu category\"), React.createElement(\"div\", {\n          className: \"modal-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          onClose: this.toggleModal,\n          modal: this.state.modal,\n          edit: this.state.edit,\n          name: this.state.name,\n          members: this.state.members,\n          id: this.state.id,\n          owner: this.state.owner,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"projects-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, projectData));\n      } else {\n        // No projects\n        content = React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"projects\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"no-projects\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"You have no categories yet\"), React.createElement(\"button\", {\n          className: \"main-btn\",\n          onClick: this.toggleModal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, \"Create a first menu category for your business!\"), React.createElement(\"div\", {\n          className: \"modal-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          onClose: this.toggleModal,\n          modal: this.state.modal,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        })))));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"main-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"(Need To Be Removed!)You are logged in as a Customer\"), React.createElement(\"h1\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Your Restaurant Menus\"), content);\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    projects: state.projects\n  };\n};\n\nexport default connect(mapStateToProps, {})(Dashboard);","map":{"version":3,"sources":["c:/Users/micah/Documents/Main/Projects/restaurant-application/restaurant_online_order_application/client/src/components/dashboard/MainContent/Dashboard-Customer.js"],"names":["React","Component","connect","Modal","Dashboard","state","modal","edit","name","members","id","owner","toggleModal","e","setState","toggleEditModal","stopPropagation","projects","props","content","projectData","sort","map","project","_id","console","log","bind","teamMembers","length","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./MainContent.scss\";\r\nimport \"./Dashboard.scss\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Modal from \"./Modal/Modal\";\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    modal: false,\r\n    edit: false,\r\n    name: \"\",\r\n    members: [],\r\n    id: \"\",\r\n    owner: {}\r\n  };\r\n\r\n  toggleModal = e => {\r\n    this.setState({ modal: !this.state.modal, edit: false });\r\n  };\r\n\r\n  toggleEditModal = (name, members, id, owner, e) => {\r\n    e.stopPropagation();\r\n\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      edit: !this.state.edit,\r\n      name: name,\r\n      members: members,\r\n      id: id,\r\n      owner: owner\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { projects } = this.props.projects;\r\n\r\n    let content;\r\n\r\n    let projectData = projects.sort().map(project => (\r\n      <div\r\n        key={project._id}\r\n        className=\"project-icon\"\r\n        /* onClick={() => this.props.history.push(`/projects/${project._id}`)} */\r\n        onClick={console.log(\"this is triggered!\")}\r\n      >\r\n        <div className=\"project-name\">{project.name}</div>\r\n        <div\r\n          className=\"project-info-button\"\r\n          onClick={this.toggleEditModal.bind(\r\n            this,\r\n            project.name,\r\n            project.teamMembers,\r\n            project._id,\r\n            project.owner\r\n          )}\r\n        >\r\n          Edit category\r\n        </div>\r\n        {/* <div className=\"project-info-button\">Go to category</div> */}\r\n      </div>\r\n    ));\r\n\r\n    if (projects.length > 0) {\r\n      // At least one project\r\n      content = (\r\n        <>\r\n          <button className=\"main-btn\" onClick={this.toggleModal}>\r\n            Create another menu category\r\n          </button>\r\n          \r\n          <div className=\"modal-wrapper\">\r\n            <Modal\r\n              onClose={this.toggleModal}\r\n              modal={this.state.modal}\r\n              edit={this.state.edit}\r\n              name={this.state.name}\r\n              members={this.state.members}\r\n              id={this.state.id}\r\n              owner={this.state.owner}\r\n            />\r\n          </div>\r\n          <div className=\"projects-wrapper\">{projectData}</div>\r\n        </>\r\n      );\r\n    } else {\r\n      // No projects\r\n      content = (\r\n        <>\r\n          <div className=\"projects\">\r\n            <div className=\"no-projects\">\r\n              <h1 className=\"header\">You have no categories yet</h1>\r\n              <button className=\"main-btn\" onClick={this.toggleModal}>\r\n                Create a first menu category for your business!\r\n              </button>\r\n              <div className=\"modal-wrapper\">\r\n                <Modal onClose={this.toggleModal} modal={this.state.modal} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"main-content\">\r\n        <h1 className=\"header\">(Need To Be Removed!)You are logged in as a Customer</h1>\r\n        <h1 className=\"header\">Your Restaurant Menus</h1>\r\n        {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  projects: state.projects\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}