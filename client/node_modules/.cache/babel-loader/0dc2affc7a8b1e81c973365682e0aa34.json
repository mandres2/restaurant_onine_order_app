{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _toConsumableArray from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\micah\\\\Documents\\\\Main\\\\Projects\\\\restaurant-application\\\\restaurant_online_order_application\\\\client\\\\src\\\\components\\\\dashboard\\\\MainContent\\\\Project\\\\Project.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProject } from \"../../../../actions/projectsActions\";\nimport { getTasks, deleteTask } from \"../../../../actions/taskActions\";\nimport Spinner from \"../../../common/Spinner\";\nimport Modal from \"../Modal/Modal\";\nimport \"../MainContent.scss\";\nimport \"./Project.scss\";\n\nvar Project =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Project, _Component);\n\n  function Project() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Project);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Project)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      modal: false,\n      edit: false,\n      editTask: false,\n      task: false,\n      name: \"\",\n      members: [],\n      id: \"\",\n      owner: {},\n      tasks: [],\n      date: \"\",\n      taskName: \"\",\n      assignee: \"\",\n      taskId: \"\",\n      dateDue: \"\"\n    };\n\n    _this.toggleModal = function (e) {\n      _this.setState({\n        modal: !_this.state.modal,\n        edit: false,\n        task: false,\n        editTask: false\n      });\n    };\n\n    _this.toggleEditModal = function (name, members, id, owner, e) {\n      _this.setState({\n        modal: !_this.state.modal,\n        edit: !_this.state.edit,\n        name: name,\n        members: members,\n        id: id,\n        owner: owner\n      });\n    };\n\n    _this.toggleTaskModal = function (e) {\n      _this.setState({\n        modal: !_this.state.modal,\n        task: !_this.state.task\n      });\n    };\n\n    _this.toggleEditTaskModal = function (taskName, assignee, dateDue, id, e) {\n      _this.setState({\n        modal: !_this.state.modal,\n        editTask: !_this.state.editTask,\n        taskName: taskName,\n        assignee: assignee,\n        taskId: id,\n        dateDue: dateDue\n      });\n    };\n\n    _this.onChange =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var tasks;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  tasks: _this.props.tasks.tasks\n                });\n\n              case 2:\n                _context.next = 4;\n                return _toConsumableArray(_this.state.tasks);\n\n              case 4:\n                tasks = _context.sent;\n                _context.next = 7;\n                return e.target.value;\n\n              case 7:\n                tasks[e.target.id].taskName = _context.sent;\n                _context.next = 10;\n                return _this.setState({\n                  tasks: tasks\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.deleteTask = function (id) {\n      _this.props.deleteTask(id);\n    };\n\n    return _this;\n  }\n\n  _createClass(Project, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n      this.props.getProject(this.props.match.params.project);\n      this.props.getTasks(this.props.match.params.project);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.match.params.project !== prevProps.match.params.project) {\n        this.props.getProject(this.props.match.params.project);\n        this.props.getTasks(this.props.match.params.project);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tasks = this.props.tasks.tasks;\n      /* --------------- */\n\n      /* --------------- */\n\n      var tasksList = tasks.map(function (task, index) {\n        return React.createElement(\"div\", {\n          className: \"task-input\",\n          key: task._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"material-icons check-task\",\n          onClick: _this2.deleteTask.bind(_this2, task._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"check_circle\"), React.createElement(\"span\", {\n          onClick: _this2.toggleEditTaskModal.bind(_this2, task.taskName, task.assignee, task.dateDue, task._id),\n          id: index,\n          name: \"task\",\n          className: \"project-task\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, task.taskName), React.createElement(\"span\", {\n          onClick: _this2.toggleEditTaskModal.bind(_this2, task.taskName, task.assignee, task.dateDue, task._id),\n          className: !task.assignee ? \"task-info muted\" : \"task-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }, task.assignee === _this2.props.auth.user.email ? \"You\" : task.assignee || \"Unassigned\"), React.createElement(\"span\", {\n          onClick: _this2.toggleEditTaskModal.bind(_this2, task.taskName, task.assignee, task.dateDue, task._id),\n          className: task.dateDue === \"Date undefined\" ? \"task-info muted\" : \"task-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158\n          },\n          __self: this\n        }, task.dateDue === \"Date undefined\" ? \"Not Set\" : task.dateDue));\n      });\n\n      if (this.props.project && this.props.project.teamMembers && !this.props.projects.projectLoading && !this.props.tasks.tasksLoading) {\n        console.log(this.props.project);\n        var project = this.props.project;\n        return React.createElement(\"div\", {\n          className: \"main-content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"project-header\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, project.name), React.createElement(\"div\", {\n          className: \"modal-wrapper\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(Modal, {\n          onClose: this.toggleModal,\n          modal: this.state.modal,\n          edit: this.state.edit,\n          task: this.state.task,\n          editTask: this.state.editTask,\n          name: this.state.name,\n          members: this.state.members,\n          id: this.state.id,\n          owner: this.state.owner,\n          taskName: this.state.taskName,\n          assignee: this.state.assignee,\n          dateDue: this.state.dateDue,\n          taskId: this.state.taskId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"tasks-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.toggleEditModal.bind(this, project.name, project.teamMembers, project._id, project.owner),\n          className: \"main-btn center-btn\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Edit Category Info\")));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"project-spinner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Project;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    project: state.projects.project,\n    projects: state.projects,\n    tasks: state.tasks\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProject: getProject,\n  getTasks: getTasks,\n  deleteTask: deleteTask\n})(Project);","map":{"version":3,"sources":["C:/Users/micah/Documents/Main/Projects/restaurant-application/restaurant_online_order_application/client/src/components/dashboard/MainContent/Project/Project.js"],"names":["React","Component","connect","getProject","getTasks","deleteTask","Spinner","Modal","Project","state","modal","edit","editTask","task","name","members","id","owner","tasks","date","taskName","assignee","taskId","dateDue","toggleModal","e","setState","toggleEditModal","toggleTaskModal","toggleEditTaskModal","onChange","props","target","value","console","log","match","params","project","prevProps","tasksList","map","index","_id","bind","auth","user","email","teamMembers","projects","projectLoading","tasksLoading","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProject } from \"../../../../actions/projectsActions\";\r\nimport { getTasks, deleteTask } from \"../../../../actions/taskActions\";\r\n\r\nimport Spinner from \"../../../common/Spinner\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nimport \"../MainContent.scss\";\r\nimport \"./Project.scss\";\r\n\r\nclass Project extends Component {\r\n/*   state = {\r\n    modal: false,\r\n    edit: false,\r\n    editTask: false,\r\n    task: false,\r\n    name: \"\",\r\n    members: [],\r\n    id: \"\",\r\n    owner: {},\r\n    tasks: [],\r\n    date: \"\",\r\n    taskName: \"\",\r\n    assignee: \"\",\r\n    taskId: \"\",\r\n    dateDue: \"\"\r\n  }; */\r\n\r\n\r\n  \r\n  state = {\r\n    modal: false,\r\n    edit: false,\r\n    editTask: false,\r\n    task: false,\r\n    name: \"\",\r\n    members: [],\r\n    id: \"\",\r\n    owner: {},\r\n    tasks: [],\r\n    date: \"\",\r\n    taskName: \"\",\r\n    assignee: \"\",\r\n    taskId: \"\",\r\n    dateDue: \"\"\r\n  };  \r\n\r\n  toggleModal = e => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      edit: false,\r\n      task: false,\r\n      editTask: false\r\n    });\r\n  };\r\n\r\n  toggleEditModal = (name, members, id, owner, e) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      edit: !this.state.edit,\r\n      name: name,\r\n      members: members,\r\n      id: id,\r\n      owner: owner\r\n    });\r\n  };\r\n\r\n  toggleTaskModal = e => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      task: !this.state.task\r\n    });\r\n  };\r\n\r\n  toggleEditTaskModal = (taskName, assignee, dateDue, id, e) => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      editTask: !this.state.editTask,\r\n      taskName: taskName,\r\n      assignee: assignee,\r\n      taskId: id,\r\n      dateDue: dateDue\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    this.props.getProject(this.props.match.params.project);\r\n    this.props.getTasks(this.props.match.params.project);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.project !== prevProps.match.params.project) {\r\n      this.props.getProject(this.props.match.params.project);\r\n      this.props.getTasks(this.props.match.params.project);\r\n    }\r\n  }\r\n\r\n  onChange = async e => {\r\n    await this.setState({ tasks: this.props.tasks.tasks });\r\n\r\n    let tasks = await [...this.state.tasks];\r\n\r\n    tasks[e.target.id].taskName = await e.target.value;\r\n\r\n    await this.setState({ tasks });\r\n  };\r\n\r\n  deleteTask = id => {\r\n    this.props.deleteTask(id);\r\n  };\r\n\r\n  render() {\r\n    const { tasks } = this.props.tasks;\r\n\r\n    /* --------------- */\r\n    \r\n    /* --------------- */\r\n\r\n\r\n    let tasksList = tasks.map((task, index) => (\r\n      <div className=\"task-input\" key={task._id}>\r\n        <i\r\n          className=\"material-icons check-task\"\r\n          onClick={this.deleteTask.bind(this, task._id)}\r\n        >\r\n          check_circle\r\n        </i>\r\n        <span\r\n          onClick={this.toggleEditTaskModal.bind(\r\n            this,\r\n            task.taskName,\r\n            task.assignee,\r\n            task.dateDue,\r\n            task._id\r\n          )}\r\n          id={index}\r\n          name=\"task\"\r\n          className=\"project-task\"\r\n        >\r\n          {task.taskName}\r\n        </span>\r\n        <span\r\n          onClick={this.toggleEditTaskModal.bind(\r\n            this,\r\n            task.taskName,\r\n            task.assignee,\r\n            task.dateDue,\r\n            task._id\r\n          )}\r\n          className={!task.assignee ? \"task-info muted\" : \"task-info\"}\r\n        >\r\n          {task.assignee === this.props.auth.user.email\r\n            ? \"You\"\r\n            : task.assignee || \"Unassigned\"}\r\n        </span>\r\n        <span\r\n          onClick={this.toggleEditTaskModal.bind(\r\n            this,\r\n            task.taskName,\r\n            task.assignee,\r\n            task.dateDue,\r\n            task._id\r\n          )}\r\n          className={\r\n            task.dateDue === \"Date undefined\" ? \"task-info muted\" : \"task-info\"\r\n          }\r\n        >\r\n          {task.dateDue === \"Date undefined\" ? \"Not Set\" : task.dateDue}\r\n        </span>\r\n      </div>\r\n    ));\r\n\r\n    if (\r\n      this.props.project &&\r\n      this.props.project.teamMembers &&\r\n      !this.props.projects.projectLoading &&\r\n      !this.props.tasks.tasksLoading\r\n    ) {\r\n      console.log(this.props.project);\r\n      const { project } = this.props;\r\n\r\n      return (\r\n        <div className=\"main-content\">\r\n          <h1 className=\"project-header\">{project.name}</h1>\r\n\r\n          <div className=\"modal-wrapper\">\r\n            <Modal\r\n              onClose={this.toggleModal}\r\n              modal={this.state.modal}\r\n              edit={this.state.edit}\r\n              task={this.state.task}\r\n              editTask={this.state.editTask}\r\n              name={this.state.name}\r\n              members={this.state.members}\r\n              id={this.state.id}\r\n              owner={this.state.owner}\r\n              taskName={this.state.taskName}\r\n              assignee={this.state.assignee}\r\n              dateDue={this.state.dateDue}\r\n              taskId={this.state.taskId}  \r\n            />\r\n          </div>\r\n\r\n          <div className=\"tasks-container\">\r\n            <button\r\n              onClick={this.toggleEditModal.bind(\r\n                this,\r\n                project.name,\r\n                project.teamMembers,\r\n                project._id,\r\n                project.owner\r\n              )}\r\n              className=\"main-btn center-btn\"\r\n            >\r\n              Edit Category Info\r\n            </button>            \r\n\r\n            {/* Here Trying rende upper modal */}\r\n\r\n\r\n\r\n          </div>\r\n\r\n\r\n          {/* Task Managing Container (We do not need this) */}\r\n          {/* <div className=\"tasks-container\">\r\n            <div className=\"projects-first-row\">\r\n              <button\r\n                className=\"main-btn add-btn\"\r\n                onClick={this.toggleTaskModal}\r\n              >\r\n                Add task\r\n              </button>\r\n              <div className=\"projects-column-headers\">\r\n                <p>Assignee</p>\r\n                <p>Due</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"project-tasks\">{tasksList}</div>\r\n          </div> */}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"project-spinner\">\r\n        <Spinner />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  project: state.projects.project,\r\n  projects: state.projects,\r\n  tasks: state.tasks\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getProject, getTasks, deleteTask }\r\n)(Project);\r\n"]},"metadata":{},"sourceType":"module"}